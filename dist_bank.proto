// proto for distributed bank
// dist_bank.proto
// IMPORTANT!!
// You can use this .proto file to generate classes in your preffered luanguage

// using version 3
syntax = "proto3";

package dist_bank;

// definition of the service
service DistBank {
    rpc LookUpAccount (LookUpRequest) returns (LookUpRely) {}
    rpc Withdraw (WithdrawRequest) returns (WithdrawReply) {}
    rpc Save(SaveRequest) returns (SaveReply) {}
}

// Look up account balance request.
// The account id of the client, must be provided.
message LookUpRequest {
    string account_id = 1;
}

// Look up account balance reply.
// String info saying whether the request is successful and
// float number telling the account balance.
// If account does not exist, only fail res_info will be replied.
message LookUpRely {
    string res_info = 1;
    float account_balance = 2;
}

// Withdraw money request.
// The account id of the client, must be provided.
message WithdrawRequest {
    string account_id = 1;
    float with_amount = 2;
}

// Withdraw money reply
// String info saying whether the request is successful and
// float number update_balance tell the updated account balance.
// If account does not exist, only fail res_info will be replied.
message WithdrawReply {
    string res_info = 1;
    float updated_balance = 2;
}

// Save money request.
// The account id of the client, must be provided.
message SaveRequest {
    string account_id = 1;
    float save_amount = 2;
}

// Save money reply
// String info saying whether the request is successful and
// float number update_balance tell the updated account balance.
// If account does not exist, only fail res_info will be replied.
message SaveReply {
    string res_info = 1;
    float  updated_balance = 2;
}

// TODO: Can anyone think of how to implement the 'disconnect' functionality?
